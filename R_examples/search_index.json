[
["index.html", "R Examples Chapter 1 Introduction", " R Examples Ben Stanbury 2020-02-11 Chapter 1 Introduction This book contains a series of R examples that are often required to meet real life use cases. The general format is as follows: Introduce the capability. Briefly describe the key packages available. Introduce a toy practice dataset that can easily be replicated on any machine. Run one or two key functions that demonstrate the capability. Show the results. The examples will generally follow a tidyverse based approach: https://www.tidyverse.org/. "],
["processing.html", "Chapter 2 Processing", " Chapter 2 Processing To follow. "],
["exploratory-data-analysis-eda.html", "Chapter 3 Exploratory Data Analysis (EDA)", " Chapter 3 Exploratory Data Analysis (EDA) To follow. "],
["modelling.html", "Chapter 4 Modelling", " Chapter 4 Modelling To follow. "],
["data-visualisation.html", "Chapter 5 Data Visualisation", " Chapter 5 Data Visualisation To follow. "],
["text.html", "Chapter 6 Text 6.1 Regular Expressions 6.2 Entity Extraction 6.3 To add", " Chapter 6 Text 6.1 Regular Expressions Regular expressions are sequences of characters that define a search pattern. They describe sets of characters using syntactic rules. 6.1.1 Key Packages Two of the most popular packages are stringr and stringi. These two packages are syntactically similar. stringr is part of Hadley Wickham’s tidyverse set of packages, providing a series of functions for string manipulation. stringr is largerly a wrapper package for stringi, the latter providing a wider range of functions. 6.1.2 Example Use case A data scientist may wish to extract all the postcodes from a series of documents stored in a data frame and collect them into a new column for further analysis. 6.1.3 Practice data set Let’s create our own toy data set. #Create some vectors to put into a dataframe id &lt;- c(1,2) name &lt;- c(&quot;Harry Potter&quot;, &quot;Ken Barlow&quot;) address &lt;- c(&quot;4 Privet Drive, Little Whinging, Surrey WD25 7LR&quot;, &quot;Coronation Street, Manchester, M17 1FZ&quot;) #Put the vectors together in a dataframe toy_df &lt;- data.frame(id, name, address) We should take a quick look at the data to check it looks okay. 6.1.4 Extracting Postcodes Next we run a regular expression over the address field and add a new column with any postcodes found. This string match will be perfromed using the str_extract_all function from the stringr package. This will extract all the postcodes into a list. If we instead wanted to extract the first result then we would instead use str_extract. Either work fine in this simple case. library(stringr) library(dplyr) new_toy_df &lt;- toy_df %&gt;% mutate(postcode = str_extract_all(address, pattern = &quot;([Gg][Ii][Rr] 0[Aa]{2})|((([A-Za-z][0-9]{1,2})|(([A-Za-z][A-Ha-hJ-Yj-y][0-9]{1,2})|(([A-Za-z][0-9][A-Za-z])|([A-Za-z][A-Ha-hJ-Yj-y][0-9][A-Za-z]?))))\\\\s?[0-9][A-Za-z]{2})&quot;)) Let’s take a look at the final output. 6.2 Entity Extraction To follow. 6.3 To add Version number. What does the postcode cover? e.g. Armed Forces, Islands. Anti-pattern - what is it not appropriate for? "],
["references.html", "References", " References "]
]
